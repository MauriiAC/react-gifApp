{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","setImages","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,cAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAoB5C,OACI,sBAAMC,SAZW,SAACC,GAElBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAMC,EAAUC,GAAhB,uBAAAC,EAAA,6DAGbC,EAHa,iDAGmCC,UAAUJ,GAH7C,+DAMAK,MAAMF,GANN,cAMbG,EANa,gBAOEA,EAAKC,OAPP,uBAOZC,EAPY,EAOZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAQ,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAbtB,kBAkBZM,GAlBY,4CAAH,wDCEPO,EAAc,SAAC,GAAkB,IAAjBb,EAAgB,EAAhBA,IAAKU,EAAW,EAAXA,MAC9B,OAEI,sBAAKI,UAAU,OAAf,UACI,qBAAKC,IAAKf,IACV,4BAAIU,QCFHM,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAE/BsB,KAAM,GACNY,SAAS,IALyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAsBtC,OAdAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAACb,GAEHW,EAAS,CACLd,KAAMG,EACNS,SAAS,SAKtB,CAACpB,IAGGqB,EDjBiBI,CAAazB,GAA9BQ,EAH4B,EAG5BA,KAAMY,EAHsB,EAGtBA,QAGb,OACI,qCACI,6BAAKpB,IAEJoB,GAAW,2CAEZ,qBAAKH,UAAU,YAAf,SACKT,EAAKE,KAAI,SAAAC,GAEN,OACI,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEjB/Bc,EAAe,WAAO,IAAD,EAEaxC,mBAAS,CAAC,cAFvB,mBAEhByC,EAFgB,KAEJ1C,EAFI,KAIvB,OAEI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ0C,EAAWjB,KAAI,SAAAV,GACX,OACI,6BACI,cAAC,EAAD,CACIA,SAAUA,KAFTA,Y,MCdrC4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b3c0a148.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState(\"Hola Mundo\");\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2)\r\n        {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","export const getGifs = async(category, setImages) => {\r\n        \r\n    //const url = 'https://api.giphy.com/v1/gifs/search?q=Rick+and+Morty&limit=10&api_key=0u41TRBjfR0ZeF6UJQ792HlxDghM7yPD'\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=0u41TRBjfR0ZeF6UJQ792HlxDghM7yPD`\r\n\r\n\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return ({\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        })\r\n    })\r\n    \r\n    //console.log(gifs);\r\n    return gifs;\r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({url, title}) => {\r\n    return (\r\n\r\n        <div className=\"card\">\r\n            <img src={url}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../Hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n    const {data, loading} = useFetchGifs(category);\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && <p>Loading...</p>}\r\n\r\n            <div className=\"cardsGrid\">\r\n                {data.map(img => {\r\n\r\n                    return(\r\n                        <GifGridItem \r\n                            key={img.id} \r\n                            {...img}\r\n                        />\r\n                        //<GifGridItem key={img.id} src={img.url} title={img.title}/>\r\n                    )\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n\r\n        data: [],\r\n        loading: true,\r\n    })\r\n    \r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then((img) => {\r\n\r\n                setState({\r\n                    data: img,\r\n                    loading: false\r\n                });\r\n\r\n            })\r\n            \r\n    }, [category])\r\n\r\n\r\n    return state;\r\n}\r\n","import {React, useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory.js'\r\nimport { GifGrid } from './components/GifGrid.js';\r\n//import PropTypes from 'prop-types';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n    return (\r\n\r\n        <>\r\n            <h2> GifExpertApp </h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n\r\n            <ul>\r\n                {\r\n                    categories.map(category => {\r\n                        return ( \r\n                            <li key={category}>\r\n                                <GifGrid\r\n                                    category={category}\r\n                                />\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport {GifExpertApp};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp.js';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}